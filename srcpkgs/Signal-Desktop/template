# Template file for 'Signal-Desktop'
pkgname=Signal-Desktop
version=6.12.0
_libsignalver=0.22.0
revision=2
create_wrksrc=yes
build_wrksrc="${pkgname}-${version}"
# Signal officially only supports x86_64 
# x86_64-musl fails because of its dependency on 'node-gyp' which depends on a glibc specific extension
# armv7hf/arm64: https://github.com/signalapp/Signal-Desktop/issues/3410
archs="x86_64*"
hostmakedepends="git git-lfs nodejs python3 tar yarn electron19 cargo rust-std protobuf cmake libclang"
build_helper="rust"
depends="cairo gtk+3 libvips pango"
short_desc="Signal Private Messenger for Linux"
maintainer="anelki <akierig@fastmail.de>"
license="AGPL-3.0-only"
homepage="https://github.com/signalapp/Signal-Desktop"
distfiles="https://github.com/signalapp/Signal-Desktop/archive/v${version}.tar.gz
 https://github.com/signalapp/libsignal/archive/refs/tags/v${_libsignalver}/libsignal-${_libsignalver}.tar.gz"
checksum="c07dccc9c032623e3b93eda2992da1c59e2dc6a93c84646d0d5bbfe4e08de4d6
 fed130fe6192e7cb422d8278a5ee4a7451ea62f5cbfd68bbacd5350513e0bad8"
nostrip_files="signal-desktop"

post_extract() {
	cd ${build_wrksrc}
	# git-lfs hook needs to be installed for one of the dependencies
	git lfs install

	vsed 's/"node": "/&>=/' -i package.json
	(
	cd ${wrksrc}
	tar xf /usr/include/electron19/node_headers.tar.gz
	)
}

do_configure() {
	echo 'ignore-engines true' > .yarnrc
	yarn --ignore-scripts --frozen-lockfile
}

do_build() {
	chromium_arch="$(node -e 'console.log(process.arch)')"
	(
		cd "$wrksrc"/libsignal-$_libsignalver/node

		vsed -e "s/unknown-linux-gnu/unknown-linux-musl/g" -i binding.gyp

		echo "Building libsignal"
		yarn add node-gyp --dev

		echo "Building libsignal"
		yarn node-gyp configure --nodedir=${wrksrc}/node_headers --build-from-source
		yarn node-gyp build --nodedir=${wrksrc}/node_headers --build-from-source

		mkdir -p prebuilds/linux-$chromium_arch
		mv build/Release/libsignal_client_linux_$chromium_arch.node prebuilds/linux-$chromium_arch/node.napi.node

		echo "Building libsignal glue code"
		yarn tsc

		echo "Cleaning dev dependencies for libsignal"
		yarn --ignore-scripts --frozen-lockfile --production
	)
	pwd
	rm -rf node_modules/@signalapp/libsignal-client/
	mv "${wrksrc}"/libsignal-$_libsignalver/node/ node_modules/@signalapp/libsignal-client

	yarn install --ignore-engines --frozen-lockfile

	yarn generate
	yarn build-release
}

do_install() {
	vmkdir usr/lib/signal-desktop

	# Remove prebuilt binaries for foreign architectures (to not confuse strip)
	for prebin in darwin-x64 linux-arm64 win32-ia32 win32-x64; do
		rm -rf release/linux-unpacked/resources/app.asar.unpacked/node_modules/{ffi-napi,ref-napi}/prebuilds/$prebin
		rm -rf release/linux-unpacked/resources/app.asar.unpacked/node_modules/ffi-napi/node_modules/ref-napi/prebuilds/$prebin
	done

	vcopy release/linux-unpacked/* usr/lib/signal-desktop

	vmkdir usr/bin
	ln -s /usr/lib/signal-desktop/signal-desktop ${DESTDIR}/usr/bin/

	vmkdir usr/share/applications
	vinstall ${FILESDIR}/signal.desktop 644 usr/share/applications/

	vmkdir usr/share/icons/hicolor
	for size in 16 32 48 128 256 1024; do
		vinstall images/icon_${size}.png 644 usr/share/icons/hicolor/${size}x${size}/apps/ signal.png
	done

	vlicense LICENSE
}
